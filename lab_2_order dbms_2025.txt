lab_assignment 2

2. Consider the following schema for Order Database:

SALESMAN(Salesman_id,Name,City,Commission)
CUSTOMER(Customer_i,Cust_Name, City, Grade, Salesman_id)
ORDERS(Ord_No, Purchase_Amt, Ord_Date, #Customer_id,Salesman_id)

Create the above tables by properly specifying the primary keys & foreign keys. Enter at leastfive tables for each relation.
Write SQL queries to
i. Count the customers with grades above Bangalore’s average.

ii. Find the name and numbers of all salesmen who 
    had more than one customer.

iii. List all salesmen and indicate those 
     who have and don’t have customers in their cities
    (Use UNION operation.)

iv. Create a view that finds the sales man who has the customer with the highest order of a day.

v. Demonstrate the DELETE operation by removing salesman with id 1000. All his orders must also be deleted.

Write PL/SQL program to demonstrate %ROWCOUNT attribute.

*********************************************************************
create database sales3;

use sales3;

CREATE TABLE SALESMAN(SALESMAN_ID int ,
SNAME VARCHAR(15),
CITY VARCHAR(15),COMISSION decimal(7,2),
CONSTRAINT PK_A PRIMARY KEY(SALESMAN_ID))engine = innodb;

desc salesman;
-------------------------------------

CREATE TABLE CUSTOMER(CUSTOMER_ID int,
CUST_NAME VARCHAR(15),
CITY VARCHAR(15),
GRADE int,
SALESMAN_ID int,

CONSTRAINT PK_B PRIMARY KEY(CUSTOMER_ID),

CONSTRAINT FK_D FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) 
ON DELETE cascade)engine = innodb;

desc customer;
-------------------------------------

CREATE TABLE ORDERS(ORD_NO int,
PURCHASE_AMT decimal(10,2),
ORD_DATE DATE,
CUSTOMER_ID int,
SALESMAN_ID int,

CONSTRAINT PK_E PRIMARY KEY(ORD_NO),

CONSTRAINT FK_G FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) 
ON DELETE CASCADE,

CONSTRAINT FK_H FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) 
ON DELETE CASCADE)engine = innodb;

desc oders;
------------------------------------------------

INSERT INTO SALESMAN VALUES(1000,'RAMA','BANGALORE', 10000);
INSERT INTO SALESMAN VALUES(2000,'KRISHNA', 'MATHURA',20000);
INSERT INTO SALESMAN VALUES(3000,'SHIVA', 'AMARNATH ',30000);
INSERT INTO SALESMAN VALUES(4000, 'GOVINDA', 'TIRUPATHI',4000);
INSERT INTO SALESMAN VALUES(5000, 'NARAYANA', 'VELLORE',50000);

SELECT * FROM SALESMAN;
SALESMAN_ID	SNAME	  CITY		COMISSION
1000		RAMA	  BANGALORE	10000.00
2000		KRISHNA	  MATHURA	20000.00
3000		SHIVA	  AMARNATH 	30000.00
4000		GOVINDA	  TIRUPATHI	4000.00
5000		NARAYANA  VELLORE	50000.00
----------- ------------ -- -------- ------ -----------


INSERT INTO customer VALUES(10 ,'GANESH', 'BANGALORE', 100 ,1000);
INSERT INTO customer VALUES(20 ,'SUDHEEP' ,'BANGALORE', 200,2000);
INSERT INTO customer VALUES(30 ,'PRABHA', 'HYDERABAD', 300,3000);
INSERT INTO customer VALUES(40 ,'ARVIND' ,'CHENNAI', 400,4000);
INSERT INTO customer VALUES(50, 'DARSHAN' ,'BANGALORE', 500,2000);
INSERT INTO customer VALUES(60, 'YASH', 'BANGALORE', 600 ,1000);

select * from customer;
CUSTOMER_ID	CUST_NAME	CITY	GRADE	SALESMAN_ID
10		GANESH	     BANGALORE	100	1000
20		SUDHEEP	     BANGALORE	200	2000
30		PRABHA	     HYDERABAD	300	3000
40		ARVIND	     CHENNAI	400	4000
50		DARSHAN	     BANGALORE	500	2000
60		YASH	    BANGALORE	600	1000
------- ------------ --------- ----------- -------------------------



INSERT INTO orders VALUES(111,100000,'2017-01-01',10,2000);
INSERT INTO orders VALUES(222,200000,'2017-02-21',20,3000);
INSERT INTO orders VALUES(333,300000,'2017-03-15',30,4000);
INSERT INTO orders VALUES(444,400000,'2017-04-18',40,5000);
INSERT INTO orders VALUES(555,500000,'2017-05-12',10,1000);
INSERT INTO orders VALUES(666,600000,'2017-05-12',10,1000);

select * from orders;
ORD_NO PURCHASE_AMT    ORD_DATE     CUSTOMER_ID	  SALESMAN_ID
111	100000.00	2017-01-01	10		2000
222	200000.00	2017-02-21	20		3000
333	300000.00	2017-03-15	30		4000
444	400000.00	2017-04-18	40		5000
555	500000.00	2017-05-12	10		1000
666	600000.00	2017-05-12	10		1000
---------------------------------------------------------------



1] Count the customers with grades above  Banglore’s  average


SELECT COUNT(CUSTOMER_ID) FROM CUSTOMER
WHERE GRADE>350;

( SELECT AVG(GRADE)FROM CUSTOMER WHERE CITY='BANGALORE');

Output:-
COUNT(CUSTOMER_ID)
------------------
1

__________________________________________________
2] Find the names and numbers of all salesman who had more than one customer.

SELECT S.SNAME,S.SALESMAN_ID
FROM SALESMAN S,CUSTOMER C
WHERE S.SALESMAN_ID=C.SALESMAN_ID
GROUP BY S.SNAME,S.SALESMAN_ID
HAVING COUNT(C.CUSTOMER_ID)>1;

OUTPUT:-
NAME      SALESMAN_ID
------------ -----------
RAMA      1000
KRISHNA   2000


------------------------------------------------------------
3]List all salesman and indicate those who have and don’t have customers in their cities. Use union operation.

(SELECT S.SALESMAN_ID,S.SNAME,C.CUST_NAME
FROM SALESMAN S,CUSTOMER C
WHERE S.CITY=C.CITY AND S.SALESMAN_ID=C.SALESMAN_ID)
UNION
(SELECT S1.SALESMAN_ID,S1.SNAME,'NO CUSTOMER'
FROM SALESMAN S1,CUSTOMER C1
WHERE S1.CITY!=C1.CITY AND S1.SALESMAN_ID=C1.SALESMAN_ID);

Output:-
SALESMAN_ID  NAME 	       CUST_NAME
----------- ----------     ---------------
1000	    RAMA 		 GANESH
1000	    RAMA 		 YASH
2000	    KRISHNA	         NO CUSTOMER
3000  	    SHIVA 		 NO CUSTOMER
4000 	    GOVINDA 	         NO CUSTOMER


------------------------------------------------------------------
4]Create a view that finds the salesman who has the customer with 
the highest order of a day.


CREATE VIEW HIGH_ORDER_DAY AS 
SELECT O.ORD_DATE,S.SALESMAN_ID,S.SNAME,C.CUST_NAME,O.PURCHASE_AMT
FROM ORDERS O,SALESMAN S,CUSTOMER C
WHERE O.SALESMAN_ID=S.SALESMAN_ID AND C.CUSTOMER_ID=O.CUSTOMER_ID;

OUTPUT OF VIEW:-
SELECT * FROM  HIGH_ORDER_DAY;

ORD_DATE	SALESMAN_ID	SNAME	CUST_NAME	PURCHASE_AMT
2017-05-12	1000		RAMA	GANESH		500000.00
2017-05-12	1000		RAMA	GANESH		600000.00
2017-01-01	2000		KRISHNA	GANESH		100000.00
2017-02-21	3000		SHIVA	SUDHEEP		200000.00
2017-03-15	4000		GOVINDA	PRABHA		300000.00
2017-04-18	5000		NARAYANA ARVIND		400000.00

ANSWER TO THE QUERY:-

SELECT * FROM HIGH_ORDER_DAY H 
WHERE H.PURCHASE_AMT=(SELECT MAX(H1.PURCHASE_AMT)
FROM HIGH_ORDER_DAY H1
WHERE H1.ORD_DATE=H.ORD_DATE);

OUTPUT:-
ORD_DATE    SALESMAN_ID	SNAME	  CUST_NAME	PURCHASE_AMT
2017-05-12	1000	RAMA	 GANESH		600000.00
2017-01-01	2000	KRISHNA	 GANESH		100000.00
2017-02-21	3000	SHIVA	 SUDHEEP	200000.00
2017-03-15	4000	GOVINDA	 PRABHA		300000.00
2017-04-18	5000	NARAYANA  ARVIND	400000.00



---------------------------------------------------------------------
5] Demonstrate the delete operation by removing 
  salesman with ID 1000, all their orders must also be deleted.

DELETE FROM SALESMAN WHERE SALESMAN_ID=1000;

SELECT * FROM SALESMAN;

SALESMAN_ID	SNAME		CITY		COMISSION
2000		KRISHNA		MATHURA		20000.00
3000		SHIVA		AMARNATH 	30000.00
4000		GOVINDA		TIRUPATHI	4000.00
5000		NARAYANA	VELLORE		50000.00


SELECT * FROM CUSTOMER;

CUSTOMER_ID	CUST_NAME	CITY		GRADE	SALESMAN_ID
20		SUDHEEP		BANGALORE	200	2000
30		PRABHA		HYDERABAD	300	3000
40		ARVIND		CHENNAI		400	4000
50		DARSHAN		BANGALORE	500	2000


SELECT * FROM ORDERS;

ORD_NO	PURCHASE_AMT	ORD_DATE	CUSTOMER_ID	SALESMAN_ID
222	200000.00	2017-02-21		20	3000
333	300000.00	2017-03-15		30	4000
444	400000.00	2017-04-18		40	5000

************************END**********************************

 
d. Write PL/SQL program to demonstrate %ROWCOUNT attribute.

 MYSQL>delimiter $$
 MYSQL>create procedure ROW_COUNTING7()
   begin
  INSERT INTO SALESMAN(SALESMAN_ID,SNAME,CITY,COMISSION) VALUES
   (8000, 'MOHAN', 'DHARWAD',4000),
   (9000, 'SATISH', 'BELGAUM',50000);
    select row_count();
    End$$
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ;
mysql> call ROW_COUNTING();
+-------------+
| row_count() |
+-------------+
|           2 |
+-------------+
1 row in set (0.03 sec)

Query OK, 0 rows affected (0.05 sec)


mysql> SELECT * FROM SALESMAN;
    
+-------------+----------+-----------+-----------+
| SALESMAN_ID | SNAME    | CITY      | COMISSION |
+-------------+----------+-----------+-----------+
|        6000 | GAGAN    | DHARWAD   |   4000.00 |
|        2000 | KRISHNA  | MATHURA   |  20000.00 |
|        3000 | SHIVA    | AMARNATH  |  30000.00 |
|        4000 | GOVINDA  | TIRUPATHI |   4000.00 |
|        5000 | NARAYANA | VELLORE   |  50000.00 |
|        7000 | HEERA    | BELGAUM   |  50000.00 |
|        8000 | MOHAN    | DHARWAD   |   4000.00 |
|        9000 | SATISH   | BELGAUM   |  50000.00 |
+-------------+----------+-----------+-----------+
8 rows in set (0.00 sec)
--------------------


