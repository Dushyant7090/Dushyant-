lab Assignment 5:

5. Consider the following database of student enrolment in courses and 

books adopted each course.

STUDENT(regno: string, name:string, major: string, bdate: date)

COURSE (courseno: int, cname: string, dept: string)

ENROLL (#regno: string, courseno#:int, sem: int marks:int)

TEXT(book-ISBN: int,book-title: string, publisher: string, author:string)

BOOK_ADOPTION(courseno#:int, sem:int, book-ISBN#:int)

Create the above tables by properly specifying the primary keys and the 

foreign Keys

Enter at least five tuples for each relation.

Write SQL queries to

i. Demonstrate how you add a textbook to the database and make this book 

be adapted by some department.

ii. Produce list of textbooks (include Course#, Book-ISBN, Book-title) in 

the alphabetical order for courses offered by the CS department that use 

more than two books.

iii. List any department that has its adopted books published by a 

specific publisher.

Write PL/SQL program to demonstrate user defined exception handling.

*****************************************************************

Create:

 CREATE DATABASE books_lab5;

use bools_lab5;

 CREATE TABLE student( regno VARCHAR(15), name VARCHAR(20), major VARCHAR(20), bdate DATE, constraint pks PRIMARY KEY (regno) )engine=innodb;


CREATE TABLE course( courseno INT, cname VARCHAR(20),dept VARCHAR(20), constraint pkc PRIMARY KEY (courseno) )engine=innodb;

CREATE TABLE enroll(regno VARCHAR(15),courseno INT, sem INT(3), marks INT(4), constraint pk22 PRIMARY KEY (regno,courseno), constraint fkes FOREIGN KEY (regno) REFERENCES student (regno),
 constraint fkec FOREIGN KEY (courseno) REFERENCES course (courseno) ) engine=innodb;

 CREATE TABLE text( book_isbn INT(5), book_title VARCHAR(20), publisher VARCHAR(20), author VARCHAR(20), constraint pkt PRIMARY KEY (book_isbn) )engine=innodb;

CREATE TABLE book_adoption( courseno INT, sem INT(3), book_isbn INT(5),constraint pk12 PRIMARY KEY (courseno,book_isbn), constraint fkba1 FOREIGN KEY (courseno) REFERENCES course 
(courseno), constraint fkba2 FOREIGN KEY (book_isbn) REFERENCES text(book_isbn))engine=innodb;

-------------------- ------------------- ----------------------------

Insertion:

 INSERT INTO student (regno,name,major,bdate) VALUES ('cs001','Ramu',''Comp Science',1993-12-30),('cs002','barath','Maths','1993-09-24'),('cs003','chandhan','Physics','1993-11-27'),
('cs004','darshan','Physics','1993-04-13'), ('cs005','veeresh','Botony','1994-08-24');

INSERT INTO course VALUES (111,'OS','CSE'), (112,'EC','CSE'),(113,'SS','ISE'), (114,'DBMS','CSE'), (115,'SIGNALS','ECE');

INSERT INTO text (book_isbn,book_title,publisher,author)values (10,'DATABASE SYSTEMS','PEARSON','SCHIELD'), (900,'OPERATING SYS','PEARSON','LELAND'), (901,'CIRCUITS','HALL INDIA','BOB'),
(902,'SYSTEM SOFTWARE','PETERSON','JACOB'),(903,'SCHEDULING','PEARSON','PATIL'), (904,'DATABASE SYSTEMS','PEARSON','JACOB'), (905,'DATABASE MANAGER','PEARSON','BOB'),
(906,'SIGNALS','HALL INDIA','SUMIT');

INSERT INTO enroll (regno,courseno,sem,marks) VALUES  ('cs001',115,3,100), ('cs002',114,5,100), ('cs003',113,5,100), ('cs004',111,5,100), ('cs005',112,3,100);

INSERT INTO book_adoption (courseno,sem,book_isbn) VALUES(111,5,900),(111,5,903),(111,5,904),(112,3,901),(113,3,10),(114,5,905),(115,3,906);


************************************************************************

Queries:

i. Demonstrate how you add a textbook to the database and make this book 
be adapted by some department.

INSERT INTO text (book_isbn,book_title,publisher,author)values(907,'COA','PEARSON','MORRIS MANO');

 INSERT INTO book_adoption (courseno,sem,book_isbn) VALUES (111,5,907);

 SELECT * FROM text;

SELECT * FROM book_adoption;



*********** ********* *******************************
ii. Produce a list of text books (include Course #, Book-ISBN, Booktitle) in the alphabetical order for courses offered by the 'CS' 
department that use more than two books.

 SELECT c.courseno,t.book_isbn,t.book_title FROM course c,book_adoption ba,text t WHERE c.courseno=ba.courseno AND ba.book_isbn=t.book_isbn AND c.dept='CSE'
 AND 2<( SELECT COUNT(book_isbn) FROM book_adoption b WHERE c.courseno=b.courseno) ORDER BY t.book_title;


***********************************************************************

iii. List any department that has all its adopted books published by a 
specific publisher.

 SELECT DISTINCT c.dept FROM course c,book_adoption b,text t WHERE c.courseno=b.courseno AND t.book_isbn=b.book_isbn AND t.publisher='PEARSON' AND c.dept NOT IN(SELECT c.dept
 FROM course c,book_adoption b,text t WHERE c.courseno=b.courseno AND t.book_isbn=b.book_isbn AND t.publisher !='PEARSON');


*************************************************************************

d. Write PL/SQL procedure to demonstrate user defined exception handling.

mysql> use books_lab6;


mysql> delimiter $$

mysql> create procedure User_defined_Exception3() 
       BEGIN
       declare Exit handler for 1054
       BEGIN
       select "Got an error: an unknown column" As Message;
       End;
       update student set name='Bhavana' where Regn='cs006';
       End$$

mysql> delimiter ;

mysql> call user_defined_exception3();


