Database 4: BOOK DEALER
Consider the following relations for a database application for a Book Dealer 


AUTHOR (Authorid int, Name:String, City:String,Country:String )

PUBLISHER (Publisherid:int, Name:String, City:String, Country:String )

CATALOG (Bookid:int, Title:String, Authorid int, Publisherid:int,Categoryid: int,Year:int, Price:int )

CATEGORY (Categoryid: int, Description:String )

ORDERDETAIL (Oredrno:int, Bookid:int, Quantity:int )

Write SQL queries to
i. Give the details of the authors who have 2 or more books in the catalog and the price ofthe books is greater than the average price of the books in the catalog.
ii. Find the author of the book, which has maximum sales.
iii. Demonstrate how you increase the price of books published by a specific publisher by10%.
Write PL/SQL program illustrates how to create and call a function.

--------------------------------------- ----------------------------




a. Create the above tables by properly specifying the primary key.

mysql> create database lab6_Book_dealer;


mysql> use lab6_Book_dealer;
Database changed

create table Author(Authorid int, Name varchar(20), City varchar(20),Country varchar(20), constraint PKA primary key(Authorid))engine=innodb;


 create table Publisher( Publisherid int, Name varchar(20), City varchar(20), Country varchar(20), constraint PKP primary key(Publisherid))engine=innodb;

create table Category( Categoryid int, Description varchar(20), constraint PKCAT primary key(Categoryid))engine=innodb;

create table Catalog(Bookid int,Title varchar(20), Authorid int, Publisherid int, Categoryid int, Year int, Price int, constraint PKB primary key(Bookid),
constraint FKA foreign key(Authorid) references Author(Authorid), constraint FKP foreign key(Publisherid) references Publisher(Publisherid),
constraint FKC foreign key(Categoryid) references Category(Categoryid))engine=innodb;


 create table Orderdetail( Orderno int, Bookid int, Quantity int, constraint PKORD primary key(Orderno), constraint FKBOOK foreign key(Bookid) references Catalog(Bookid))engine=innodb;


***********************************************************************************
b. Enter At least five tuples for each relation.


insert into author values(1000,'Nandagopalan','Bangalore','India'),(2000,'Tony','Haywood','USA'),(3000,'Holzner','New York','USA'),(4000,'Tennenbaum','London','UK'),
(5000,'Balagurusamy','Chennai','India');

insert into publisher values(11,'Wiely','New Delhi','India'),(22,'PHI','California','USA'),(33,'Sapna','Bangalore','India'),(44,'TMH','New York','USA'),(55,'Wrox','Texas','USA');

insert into category values(1,'OS'),(2,'Languages'),(3,'Hardware')(4,'Algorithms')(5,'Internet');

insert into catalog values(123,'DSC',1000,33,2,2000,185),(456,'Networks',4000,44,4,2002,365),(789,'VB6',2000,11,2,2000,300),(213,'Frontpage',4000,44,5,2003,500),
(879,'ADA',1000,33,4,2001,195);

insert into orderdetail values(112,123,100),(113,123,20),(114,213,50),(115,789,500),(116,879,8);

**************************************************************************************
c. Execute the following queries (SQL)

1.Give the details of the authors who have 2 or more books in the catalog  and the price of the books is greater than the average price of the books in the catalog  .
solution to above query:


mysql> select c.authorid,a.name from catalog c, author a  where a.authorid=c.authorid and c.price>(select avg(price) from catalog)  group by c.authorid,a.name having count(c.authorid)>=2;


-----------------    ----------------- --------------   ------------------------
2. Demonstrate how to increase the price of the book published by a specific  publisher by 10%.

mysql> Update Publisher p,Catalog c set c.price=c.price+(c.price*0.1) where
    -> c.publisherid=p.publisherid AND p.publisherid=44;

-----------------------------------------------------------------------------------
	

3.  Find the author of the book, which has maximum sales.

 (select authorid from catalog where bookid in(select bookid from orderdetail group by bookid having sum(quantity)in(select sum(quantity) from orderdetail group by bookid order by sum(quantity) desc limit 1)));



**************************************************************************************
d. Write PL/SQL procedure to illustrate, how to create and call a function

           delimiter $$
         create function custid33( authorid int)
           returns varchar(20)
            Deterministic
            begin
            declare city varchar(20);
           if authorid=3000 then
            set city='newyork';
           update author set city='newyork' where authorid=3000;
            end if;
            return (city);
            end$$

mysql>delimiter ;

mysql> select authorid,name,custid33(authorid) from author;

